stages:
  - build
  - deploy
  - teardown

build:
  image: docker:20
  stage: build
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - if [[ $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH ]]; then DOCKER_TAG=latest; else DOCKER_TAG="$CI_COMMIT_REF_NAME"; fi
    - echo "Building $CI_REGISTRY_IMAGE:$DOCKER_TAG"
    - docker buildx build --cache-from=$CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$DOCKER_TAG --push --target=base .
  rules:
    - if: $CI_MERGE_REQUEST_ID
      changes:
        - Dockerfile
        - package.json
        - package-lock.json
        - tsconfig.json
        - src/**/*.ts
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile
        - package.json
        - package-lock.json
        - tsconfig.json
        - src/**/*.ts

build-utils:
  image: docker:20
  stage: build
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - echo "Building $CI_REGISTRY_IMAGE/utils:latest"
    - docker buildx build --cache-from=$CI_REGISTRY_IMAGE/utils:latest -t $CI_REGISTRY_IMAGE/utils:latest --push -f Dockerfile-utils .
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile-utils

deploy:
  stage: deploy
  image: $CI_REGISTRY_IMAGE/utils:latest
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.cc25.chasacademy.dev/
    on_stop: stop_review
  before_script:
    - apk update && apk add curl jq gettext
  script:
    - |
      set -e

      # Set the environment variables correctly
      if [[ $CI_COMMIT_REF_NAME == "main" ]]; then 
        export NODE_ENV=production
        export CI_ENVIRONMENT_SLUG="vibedrop-backend"
        export NORMALIZED_STACK_NAME="vibedrop-backend"
      else
        export NODE_ENV=development
        export CI_ENVIRONMENT_SLUG="vibedrop-backend-${CI_COMMIT_REF_NAME//[^a-zA-Z0-9]/-}"
        export NORMALIZED_STACK_NAME=$(echo "$CI_ENVIRONMENT_SLUG" | tr -cd '[:alnum:]_-')
      fi
      echo "NODE_ENV set to $NODE_ENV"
      echo "CI_ENVIRONMENT_SLUG set to $CI_ENVIRONMENT_SLUG"
      echo "NORMALIZED_STACK_NAME set to $NORMALIZED_STACK_NAME"
      
      export PORTAINER_TOKEN=$(curl -X POST "https://portainer.cc25.chasacademy.dev/api/auth" \
        --json '{"username": "'$PORTAINER_USER'", "password": "'$PORTAINER_PASSWORD'"}' \
        | jq -r '.jwt')

      export STACK_NAME=$NORMALIZED_STACK_NAME
      echo "STACK_NAME: $STACK_NAME"
      
      if [[ $CI_COMMIT_REF_NAME = $CI_DEFAULT_BRANCH ]]; then 
        DOCKER_TAG=latest
      else 
        DOCKER_TAG=$CI_COMMIT_REF_NAME
      fi
      export DOCKER_TAG

      envsubst < docker-compose.yml > deployable-compose.yml
      cat deployable-compose.yml

      export ENDPOINT_ID=$(curl -sSL \
        -H "Authorization: Bearer $PORTAINER_TOKEN" \
        https://portainer.cc25.chasacademy.dev/api/endpoints \
        | jq -r '.[] | select(.Name == "primary") | .Id')

      STACK_ID=$(curl -sSL \
        -H "Authorization: Bearer $PORTAINER_TOKEN" \
        https://portainer.cc25.chasacademy.dev/api/stacks \
        | jq -r --arg NAME "$STACK_NAME" '.[] | select(.Name == $NAME) | .Id')

      if [ -z "$STACK_ID" ]; then
        curl -X POST \
          "https://portainer.cc25.chasacademy.dev/api/stacks/create/swarm/file?endpointId=$ENDPOINT_ID" \
          -H "Authorization: Bearer $PORTAINER_TOKEN" \
          -F Name="$STACK_NAME" \
          -F SwarmID="$SWARM_ID" \
          -F file=@deployable-compose.yml \
          | jq
      else 
        curl -X PUT \
          "https://portainer.cc25.chasacademy.dev/api/stacks/$STACK_ID?endpointId=$ENDPOINT_ID" \
          -H "Authorization: Bearer $PORTAINER_TOKEN" \
          --json "$(jq -n --arg compose "$(cat deployable-compose.yml)" \
          '{"prune": true, "pullImage": true, "stackFileContent": $compose}')" \
          | jq
      fi

stop_review:
  stage: teardown
  image: $CI_REGISTRY_IMAGE/utils:latest
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual
  script:
    - |
      set -e

      export PORTAINER_TOKEN=$(curl -X POST "https://portainer.cc25.chasacademy.dev/api/auth" \
        --json '{"username": "'$PORTAINER_USER'", "password": "'$PORTAINER_PASSWORD'"}' \
        | jq -r '.jwt')

      export STACK_NAME=$NORMALIZED_STACK_NAME
      export ENDPOINT_ID=$(curl -sSL \
        -H "Authorization: Bearer $PORTAINER_TOKEN" \
        https://portainer.cc25.chasacademy.dev/api/endpoints \
        | jq -r '.[] | select(.Name == "primary") | .Id')

      STACK_ID=$(curl -sSL \
        -H "Authorization: Bearer $PORTAINER_TOKEN" \
        https://portainer.cc25.chasacademy.dev/api/stacks \
        | jq -r --arg NAME "$STACK_NAME" '.[] | select(.Name == $NAME) | .Id')

      if [ -n "$STACK_ID" ]; then
        curl -X DELETE \
          "https://portainer.cc25.chasacademy.dev/api/stacks/$STACK_ID?endpointId=$ENDPOINT_ID" \
          -H "Authorization: Bearer $PORTAINER_TOKEN"
      fi
