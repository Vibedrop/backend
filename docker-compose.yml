services:
  backend:
    image: registry.chasacademy.dev/chas-challenge-2025/vibedrop/backend:${DOCKER_TAG}
    restart: "no"
    networks:
      - traefik-public
      - vibedrop-db
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@vibedrop-infra-db:5432/vibedrop
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - SUPABASE_BUCKET_NAME=${SUPABASE_BUCKET_NAME}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - vibedrop-infra-db
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public

        # HTTP-router
        - traefik.http.routers.${STACK_NAME}-http.rule=Host(`${STACK_NAME}.cc25.chasacademy.dev`)
        - traefik.http.routers.${STACK_NAME}-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME}-http.middlewares=https-redirect

        # HTTPS-router
        - traefik.http.routers.${STACK_NAME}-https.rule=Host(`${STACK_NAME}.cc25.chasacademy.dev`)
        - traefik.http.routers.${STACK_NAME}-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME}-https.tls=true
        - traefik.http.routers.${STACK_NAME}-https.tls.certresolver=le

        # Backend-service
        - traefik.http.services.${STACK_NAME}.loadbalancer.server.port=3000

  vibedrop-infra-db:
    image: postgres:16-alpine
    restart: "no"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: vibedrop
    volumes:
      - /srv/docker/volumes/vibedrop/postgres-data:/var/lib/postgresql/data
    networks:
      - vibedrop-db

networks:
  traefik-public:
    external: true
  vibedrop-db:
